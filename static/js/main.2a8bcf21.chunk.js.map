{"version":3,"sources":["components/Navbar.js","components/Register.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","style","theme","Mode","href","title","type","id","role","onClick","Monokai","placeholder","TurnMode","btntext","Register","useState","text","setText","Format","str","replace","split","length","htmlFor","txttheme","heading","value","onChange","event","target","rows","newText","toUpperCase","alert","toLowerCase","console","log","navigator","clipboard","writeText","then","scope","colSpan","count","i","punctuation","Alert","xmlns","display","fill","viewBox","d","width","height","xlinkHref","icon","msg","App","setAlert","setMode","setBtnText","color","backgroundColor","setTxtTheme","boxShadow","setTheme","document","body","background","ShowAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2a8bcf21.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n   return (\r\n      <div className=\"\" style={props.theme} >\r\n\r\n         <nav className={`navbar navbar-expand-lg  navbar-${props.Mode} bg-${props.Mode} `}  >\r\n\r\n            <div className=\"container-fluid\" >\r\n               <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n               <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                  <span className=\"navbar-toggler-icon\"></span>\r\n               </button>\r\n\r\n               <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                  <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                     <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                     </li>\r\n                     <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"\">About</a>\r\n                     </li>\r\n                     <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                           Themes\r\n                        </a>\r\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                           <li><a className=\"dropdown-item\" href=\"/\">Quiet Light</a></li>\r\n                           <li><div className=\"dropdown-item\" onClick={props.Monokai} id=\"monokai\">Monokai</div></li>\r\n                           <li><a className=\"dropdown-item\" href=\"/\">Cobalt2</a></li>\r\n                           <li><a className=\"dropdown-item\" href=\"/\">High Contrast</a></li>\r\n                           <li><hr className=\"dropdown-divider\" /></li>\r\n                           <li><a className=\"dropdown-item\" href=\"/\">Create own...</a></li>\r\n                        </ul>\r\n                     </li>\r\n                     <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"/\">Log In</a>\r\n                     </li>\r\n                     <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"/\">Sign Up</a>\r\n                     </li>\r\n                  </ul>\r\n                  <form className=\"d-flex\">\r\n                     <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search...\" aria-label=\"Search\" />\r\n                     <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                  </form>\r\n               </div>\r\n\r\n\r\n            </div>\r\n            <div type=\"button\" onClick={props.TurnMode}>\r\n               <button type=\"button\" className={`btn btn-${props.Mode === 'dark' ? 'light' : 'dark'} mx-3`}><i className={`${props.btntext}`}></i></button>\r\n\r\n            </div>\r\n         </nav>\r\n      </div >\r\n   )\r\n}\r\nNavbar.propTypes = {\r\n   title: PropTypes.string,\r\n   heading: PropTypes.string,\r\n}\r\n\r\n// export default Navbar\r\n","import React, { useState } from 'react'\r\n// import \"./Register.css\"\r\nfunction Register(props) {\r\n\r\n\r\n   const [text, setText] = useState('');\r\n   const Change = (event) => {          // Change the value of text area\r\n      setText(event.target.value)\r\n   }\r\n\r\n\r\n   const Uppercase = () => {             // Convert to Upper case\r\n      let newText = text.toUpperCase()\r\n      setText(newText)\r\n      props.alert(\"Text Converted to Upper-Case\", \"success\", \"check-circle-fill\")\r\n   }\r\n\r\n\r\n   const Lowercase = () => {             // Convert to Lower case\r\n      let newText = text.toLowerCase();\r\n      setText(newText)\r\n      props.alert(\"Text Converted to Lower-Case\", \"success\", \"check-circle-fill\")\r\n   }\r\n\r\n\r\n   const Copy = () => {           // Copy Text \r\n\r\n      console.log(navigator.clipboard.writeText(text).then.then)\r\n      props.alert(\"Text Copied To clipboard\", \"info\", \"check-circle-fill\")\r\n   }\r\n   const Format = (str) => {           // Format Text \r\n\r\n      str = str.replace(/(^\\s*)|(\\s*$)/gi, \"\");\r\n      str = str.replace(/[ ]{2,}/gi, \" \");\r\n      str = str.replace(/\\n /, \"\\n\");\r\n      // let count = 0;\r\n      // for (var i = 0; i < str.length; i++) {\r\n      //    if (str[i] != \"\") {\r\n      //       count += 1;\r\n      //    }\r\n      // }\r\n\r\n      return str.split(' ').length;\r\n\r\n\r\n   }\r\n\r\n   const Clear = () => {           // Clear Text\r\n      let cleartext = ''\r\n      setText(cleartext)\r\n      props.alert(\"Text Cleared\", \"success\", \"check-circle-fill\")\r\n   }\r\n\r\n   const punctuation = (count) => {     // Count the punctuation \r\n      count = 0;\r\n      for (let i = 0; i < text.length; i++) {\r\n         if (text[i] === '!' || text[i] === ',' || text[i] === ';' || text[i] === '.' || text[i] === '?' || text[i] === '-' || text[i] === '\\'' || text[i] === '/' || text[i] === ':') {\r\n            count++;\r\n         }\r\n\r\n      }\r\n      return count;\r\n\r\n   }\r\n\r\n\r\n\r\n   // console.log(text)\r\n\r\n\r\n   return (\r\n      <>\r\n         <div className=\"container form-control my-5\" style={props.theme} >\r\n            <div className=\"mb-3\">\r\n               <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n               <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" style={props.txttheme} aria-describedby=\"emailHelp\" />\r\n               <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n            </div>\r\n            <div className=\"form-group \">\r\n               <label htmlFor=\"exampleFormControlTextarea1\"><h3>{props.heading}</h3></label>\r\n               <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" style={props.txttheme} value={text} onChange={Change} placeholder=\"What you want to convert?\" rows=\"10\"></textarea>\r\n            </div>\r\n            <div className=\"mb-3 form-check\">\r\n               <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n               <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Remember me</label>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary m-3\" onClick={Uppercase}>Convert To Upper Case(A,B,C)</button>\r\n            <button type=\"reset\" className=\"btn btn-primary m-3\" onClick={Lowercase}>Convert To Lower Case(a,b,c)</button>\r\n            <button type=\"reset\" className=\"btn btn-primary m-3\" onClick={Copy}>Copy Text</button>\r\n            <button type=\"reset\" className=\"btn btn-primary m-3\" onClick={Format}>Format Text</button>\r\n            <button type=\"reset\" className=\"btn btn-primary m-3\" onClick={Clear}>Clear Text</button>\r\n\r\n\r\n\r\n\r\n\r\n         </div>\r\n         <div className=\"Text__table container \" >\r\n            <table className={`table table-striped table-${props.Mode}`} >\r\n               <thead>\r\n                  <tr>\r\n                     <th scope=\"col\">Overview</th>\r\n                     <th scope=\"col\"></th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  <tr>\r\n                     <th scope=\"row\">Charactors</th>\r\n                     <td>{text.length}</td>\r\n                  </tr>\r\n                  <tr>\r\n                     <th scope=\"row\">Words</th>\r\n                     <td>{Format(text)}</td>\r\n                  </tr>\r\n                  <tr>\r\n                     <th scope=\"row\">panctuation</th>\r\n                     <td colSpan=\"2\">{punctuation()}</td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport \"./Alert.css\"\r\nfunction Alert(props) {\r\n\r\n   return (\r\n      props.alert && <>\r\n         <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ display: 'none' }}>\r\n            <symbol id=\"check-circle-fill\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n               <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n            </symbol>\r\n            <symbol id=\"info-fill\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n               <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\" />\r\n            </symbol>\r\n            <symbol id=\"exclamation-triangle-fill\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n               <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\r\n            </symbol>\r\n         </svg>\r\n\r\n\r\n\r\n         <div className={`alert alert-${props.alert.type} d-flex align-items-center alert__animation `} role=\"alert\">\r\n            <svg className=\"bi flex-shrink-0 me-2\" width=\"24\" height=\"24\" role=\"img\" aria-label=\"Success:\"><use xlinkHref={`#${props.alert.icon}`} /></svg>\r\n            <div>\r\n               <strong>{props.alert.msg}</strong>\r\n            </div>\r\n         </div>\r\n\r\n\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Alert\r\n","// import './App.css';\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//    BrowserRouter as Router,\n//    Route,\n//    Link,\n//    Switch\n// } from 'react-router-dom';\n\n\n\n\nfunction App() {\n  // =============== State-Hooks =========================\n\n  const [alert, setAlert] = useState(null)\n  const [Mode, setMode] = useState('light') // Dark mode / Light mode\n  const [btntext, setBtnText] = useState(\"bi bi-moon\")\n\n\n  const [txttheme, setTxtTheme] = useState({\n    color: 'black', backgroundColor: 'white'\n  })\n\n  const [theme, setTheme] = useState({\n    color: 'black',\n    backgroundColor: '#d9fff266',\n    boxShadow: '#0000004d 1px 1px 3px 0px'\n  })\n\n\n  // =============== Functions =========================\n  const Monokai = () => {\n    console.log('its working')\n    setMode('monokai')\n\n\n    // if (Mode === 'monokai') {\n\n    // } else{}\n    document.body.style.background = '#131c21'\n    // setMode('dark')\n    setBtnText(\"bi bi-brightness-high\")\n    setTxtTheme({ color: 'white', backgroundColor: '#33383b' })\n    setTheme({\n      color: \"white\",\n      backgroundColor: \"rgb(30, 36, 40)\",\n      // boxShadow: \"rgb(255 255 255 / 83%) 0px 0px 5px 0px\"\n      boxShadow: \"#ffffff80 1px 1px 5px 0px\"\n\n    })\n    ShowAlert(\"Dark Mode has been enabled\", \"light\", \"check-circle-fill\")\n  }\n\n\n  const TurnMode = () => {      // Dark / Light - Switch Func..\n\n    if (Mode === 'light') {\n      // To Dark Theme\n      document.body.style.background = '#131c21'\n      setMode('dark')\n      setBtnText(\"bi bi-brightness-high\")\n      setTxtTheme({ color: 'white', backgroundColor: '#33383b' })\n      setTheme({\n        color: \"white\",\n        backgroundColor: \"rgb(30, 36, 40)\",\n        // boxShadow: \"rgb(255 255 255 / 83%) 0px 0px 5px 0px\"\n        boxShadow: \"#ffffff80 1px 1px 5px 0px\"\n\n      })\n      ShowAlert(\"Dark Mode has been enabled\", \"light\", \"check-circle-fill\")\n\n    } else {\n      // To Light Theme\n      document.body.style.background = 'white'\n      setMode('light')\n      setBtnText(\"bi bi-moon\")\n      setTxtTheme({ color: 'black', backgroundColor: 'white' })\n\n      setTheme({\n        color: 'black',\n        backgroundColor: '#d9fff266',\n        boxShadow: '#0000004d 1px 1px 3px 0px'\n      })\n      ShowAlert(\"Light Mode has been enabled\", \"dark\", \"check-circle-fill\")\n    }\n  }\n\n\n  const ShowAlert = (message, type, icon) => {   // Alert Func..\n    setAlert({\n      icon: icon,\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 1000)\n  }\n  \n\n\n  // =============== JSX =========================\n\n  return (\n    <>\n\n      <Navbar title=\"Practice.Com\" Mode={Mode} btntext={btntext} TurnMode={TurnMode} Monokai={Monokai} />\n      <Alert alert={alert} />\n      <Register heading=\"Enter the text to analyze\" alert={ShowAlert} Mode={Mode} TurnMode={TurnMode} txttheme={txttheme} theme={theme} />\n      {/* <Router>\n            <Switch>\n               <Route exact path=\"/\">\n               </Route>\n               <Route exact path=\"/about\">\n                  <About theme={theme} txttheme={txttheme} Mode={Mode} />\n               </Route>\n            </Switch>\n         </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}